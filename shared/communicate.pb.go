// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: shared/communicate.proto

package shared

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_communicate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_shared_communicate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_shared_communicate_proto_rawDescGZIP(), []int{0}
}

type InitialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params map[string]string `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //
}

func (x *InitialRequest) Reset() {
	*x = InitialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_communicate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitialRequest) ProtoMessage() {}

func (x *InitialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_communicate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitialRequest.ProtoReflect.Descriptor instead.
func (*InitialRequest) Descriptor() ([]byte, []int) {
	return file_shared_communicate_proto_rawDescGZIP(), []int{1}
}

func (x *InitialRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type InjectCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string            `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Headers map[string]string `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Value   []byte            `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *InjectCallRequest) Reset() {
	*x = InjectCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_communicate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjectCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectCallRequest) ProtoMessage() {}

func (x *InjectCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_communicate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectCallRequest.ProtoReflect.Descriptor instead.
func (*InjectCallRequest) Descriptor() ([]byte, []int) {
	return file_shared_communicate_proto_rawDescGZIP(), []int{2}
}

func (x *InjectCallRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *InjectCallRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *InjectCallRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type InjectCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []byte `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *InjectCallResponse) Reset() {
	*x = InjectCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_communicate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjectCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectCallResponse) ProtoMessage() {}

func (x *InjectCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_communicate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectCallResponse.ProtoReflect.Descriptor instead.
func (*InjectCallResponse) Descriptor() ([]byte, []int) {
	return file_shared_communicate_proto_rawDescGZIP(), []int{3}
}

func (x *InjectCallResponse) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_shared_communicate_proto protoreflect.FileDescriptor

var file_shared_communicate_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x9f, 0x01, 0x0a, 0x0e,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10,
	0x03, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0xbb, 0x01,
	0x0a, 0x11, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2c, 0x0a, 0x12, 0x49,
	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x84, 0x01, 0x0a, 0x0b, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x12, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0a, 0x49,
	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x6e,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x09, 0x5a, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_shared_communicate_proto_rawDescOnce sync.Once
	file_shared_communicate_proto_rawDescData = file_shared_communicate_proto_rawDesc
)

func file_shared_communicate_proto_rawDescGZIP() []byte {
	file_shared_communicate_proto_rawDescOnce.Do(func() {
		file_shared_communicate_proto_rawDescData = protoimpl.X.CompressGZIP(file_shared_communicate_proto_rawDescData)
	})
	return file_shared_communicate_proto_rawDescData
}

var file_shared_communicate_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_shared_communicate_proto_goTypes = []interface{}{
	(*Empty)(nil),              // 0: shared.Empty
	(*InitialRequest)(nil),     // 1: shared.InitialRequest
	(*InjectCallRequest)(nil),  // 2: shared.InjectCallRequest
	(*InjectCallResponse)(nil), // 3: shared.InjectCallResponse
	nil,                        // 4: shared.InitialRequest.ParamsEntry
	nil,                        // 5: shared.InjectCallRequest.HeadersEntry
}
var file_shared_communicate_proto_depIdxs = []int32{
	4, // 0: shared.InitialRequest.params:type_name -> shared.InitialRequest.ParamsEntry
	5, // 1: shared.InjectCallRequest.headers:type_name -> shared.InjectCallRequest.HeadersEntry
	1, // 2: shared.Communicate.Initial:input_type -> shared.InitialRequest
	2, // 3: shared.Communicate.InjectCall:input_type -> shared.InjectCallRequest
	0, // 4: shared.Communicate.Initial:output_type -> shared.Empty
	3, // 5: shared.Communicate.InjectCall:output_type -> shared.InjectCallResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_shared_communicate_proto_init() }
func file_shared_communicate_proto_init() {
	if File_shared_communicate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shared_communicate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_communicate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_communicate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InjectCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_communicate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InjectCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shared_communicate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shared_communicate_proto_goTypes,
		DependencyIndexes: file_shared_communicate_proto_depIdxs,
		MessageInfos:      file_shared_communicate_proto_msgTypes,
	}.Build()
	File_shared_communicate_proto = out.File
	file_shared_communicate_proto_rawDesc = nil
	file_shared_communicate_proto_goTypes = nil
	file_shared_communicate_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CommunicateClient is the client API for Communicate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommunicateClient interface {
	Initial(ctx context.Context, in *InitialRequest, opts ...grpc.CallOption) (*Empty, error)
	InjectCall(ctx context.Context, in *InjectCallRequest, opts ...grpc.CallOption) (*InjectCallResponse, error)
}

type communicateClient struct {
	cc grpc.ClientConnInterface
}

func NewCommunicateClient(cc grpc.ClientConnInterface) CommunicateClient {
	return &communicateClient{cc}
}

func (c *communicateClient) Initial(ctx context.Context, in *InitialRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/shared.Communicate/Initial", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *communicateClient) InjectCall(ctx context.Context, in *InjectCallRequest, opts ...grpc.CallOption) (*InjectCallResponse, error) {
	out := new(InjectCallResponse)
	err := c.cc.Invoke(ctx, "/shared.Communicate/InjectCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommunicateServer is the server API for Communicate service.
type CommunicateServer interface {
	Initial(context.Context, *InitialRequest) (*Empty, error)
	InjectCall(context.Context, *InjectCallRequest) (*InjectCallResponse, error)
}

// UnimplementedCommunicateServer can be embedded to have forward compatible implementations.
type UnimplementedCommunicateServer struct {
}

func (*UnimplementedCommunicateServer) Initial(context.Context, *InitialRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Initial not implemented")
}
func (*UnimplementedCommunicateServer) InjectCall(context.Context, *InjectCallRequest) (*InjectCallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InjectCall not implemented")
}

func RegisterCommunicateServer(s *grpc.Server, srv CommunicateServer) {
	s.RegisterService(&_Communicate_serviceDesc, srv)
}

func _Communicate_Initial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommunicateServer).Initial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shared.Communicate/Initial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommunicateServer).Initial(ctx, req.(*InitialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Communicate_InjectCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InjectCallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommunicateServer).InjectCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shared.Communicate/InjectCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommunicateServer).InjectCall(ctx, req.(*InjectCallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Communicate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shared.Communicate",
	HandlerType: (*CommunicateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Initial",
			Handler:    _Communicate_Initial_Handler,
		},
		{
			MethodName: "InjectCall",
			Handler:    _Communicate_InjectCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shared/communicate.proto",
}
